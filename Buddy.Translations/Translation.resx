<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot your password</value>
  </data>
  <data name="InvalidAPIKeyprovided" xml:space="preserve">
    <value>Invalid API Key provided</value>
  </data>
  <data name="InvalidUsernamePassword" xml:space="preserve">
    <value>InvalidUsernamePassword</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginIncorrect" xml:space="preserve">
    <value>Invalid Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="NoAPIKeyConfigured" xml:space="preserve">
    <value>No API Key Configured</value>
  </data>
  <data name="NoAPIUrlConfigured" xml:space="preserve">
    <value>No API Url Configured</value>
  </data>
  <data name="NotAuthorized" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="RequiredField" xml:space="preserve">
    <value>Field is required {0}</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="BarcodeImageUrl" xml:space="preserve">
    <value>Barcode Image Url</value>
  </data>
  <data name="FirstSetup" xml:space="preserve">
    <value>First Setup</value>
  </data>
  <data name="InvalidTwoFactorCode" xml:space="preserve">
    <value>Invalid Two Factor Code</value>
  </data>
  <data name="ManualSetupCode" xml:space="preserve">
    <value>Manual Setup Code</value>
  </data>
  <data name="ReturnUrl" xml:space="preserve">
    <value>Return Url</value>
  </data>
  <data name="TwoFactorToken" xml:space="preserve">
    <value>Token</value>
  </data>
  <data name="Chinese" xml:space="preserve">
    <value>Chinese</value>
  </data>
  <data name="Dutch" xml:space="preserve">
    <value>Dutch</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="Russian" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
    <comment>Menu</comment>
  </data>
  <data name="AccountSettings" xml:space="preserve">
    <value>Account settings </value>
    <comment>Menu</comment>
  </data>
  <data name="Communication" xml:space="preserve">
    <value>Communication </value>
    <comment>Menu</comment>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard </value>
    <comment>Menu</comment>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details </value>
    <comment>Menu</comment>
  </data>
  <data name="Framework" xml:space="preserve">
    <value>Framework</value>
    <comment>Menu</comment>
  </data>
  <data name="Grid" xml:space="preserve">
    <value>Grid </value>
    <comment>Menu</comment>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
    <comment>Menu</comment>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search </value>
    <comment>Menu</comment>
  </data>
  <data name="Testing" xml:space="preserve">
    <value>Testing</value>
    <comment>Menu</comment>
  </data>
  <data name="Testpage" xml:space="preserve">
    <value>Testpage </value>
    <comment>Menu</comment>
  </data>
  <data name="NoAPIKeyprovided" xml:space="preserve">
    <value>No API Key Provided</value>
  </data>
  <data name="MyAccount" xml:space="preserve">
    <value>My Account</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Guidelines" xml:space="preserve">
    <value>Guidelines</value>
  </data>
  <data name="Alerts" xml:space="preserve">
    <value>Alerts</value>
  </data>
  <data name="Buttons" xml:space="preserve">
    <value>Buttons</value>
  </data>
  <data name="Checkboxes" xml:space="preserve">
    <value>Checkboxes</value>
  </data>
  <data name="CustomParamaters" xml:space="preserve">
    <value>Custom Paramaters</value>
  </data>
  <data name="DateTimeControls" xml:space="preserve">
    <value>DateTime Controls</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Dialogs" xml:space="preserve">
    <value>Dialogs</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="Grids" xml:space="preserve">
    <value>Grids</value>
  </data>
  <data name="Images" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="RadioButtons" xml:space="preserve">
    <value>Radio Buttons</value>
  </data>
  <data name="TextBoxes" xml:space="preserve">
    <value>TextBoxes</value>
  </data>
  <data name="Urls" xml:space="preserve">
    <value>Urls</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="Correct" xml:space="preserve">
    <value>Correct</value>
  </data>
  <data name="Incorrect" xml:space="preserve">
    <value>Incorrect</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddFormTitle" xml:space="preserve">
    <value>Add New Record</value>
  </data>
  <data name="AND" xml:space="preserve">
    <value>AND</value>
  </data>
  <data name="AutoFit" xml:space="preserve">
    <value>Auto Fit this column</value>
  </data>
  <data name="AutoFitAll" xml:space="preserve">
    <value>Auto Fit all columns</value>
  </data>
  <data name="BatchSaveConfirm" xml:space="preserve">
    <value>Are you sure you want to save changes?</value>
  </data>
  <data name="BatchSaveLostChanges" xml:space="preserve">
    <value>Unsaved changes will be lost. Are you sure you want to continue?</value>
  </data>
  <data name="Between" xml:space="preserve">
    <value>Between</value>
  </data>
  <data name="Blanks" xml:space="preserve">
    <value>Blanks</value>
  </data>
  <data name="Branche" xml:space="preserve">
    <value>Branche</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelEdit" xml:space="preserve">
    <value>Are you sure you want to Cancel the changes?</value>
  </data>
  <data name="ChooseColumns" xml:space="preserve">
    <value>Choose Column</value>
  </data>
  <data name="ChooseDate" xml:space="preserve">
    <value>Choose a Date</value>
  </data>
  <data name="ClearButton" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClearFilter" xml:space="preserve">
    <value>Clear Filter</value>
  </data>
  <data name="Columnchooser" xml:space="preserve">
    <value>Columns</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Are you sure you want to Delete Record?</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="CreditNumber" xml:space="preserve">
    <value>Credit Number</value>
  </data>
  <data name="Csvexport" xml:space="preserve">
    <value>CSV Export</value>
  </data>
  <data name="CustomFilter" xml:space="preserve">
    <value>Custom Filter</value>
  </data>
  <data name="CustomFilterDatePlaceHolder" xml:space="preserve">
    <value>Choose a date</value>
  </data>
  <data name="CustomFilterPlaceHolder" xml:space="preserve">
    <value>Enter the value</value>
  </data>
  <data name="DateFilter" xml:space="preserve">
    <value>Date Filters</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteOperationAlert" xml:space="preserve">
    <value>No records selected for delete operation</value>
  </data>
  <data name="DeleteRecord" xml:space="preserve">
    <value>Delete Record</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditFormTitle" xml:space="preserve">
    <value>Details of</value>
  </data>
  <data name="EditOperationAlert" xml:space="preserve">
    <value>No records selected for edit operation</value>
  </data>
  <data name="EditRecord" xml:space="preserve">
    <value>Edit Record</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>E-mail Address</value>
  </data>
  <data name="EmptyDataSourceError" xml:space="preserve">
    <value>DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid</value>
  </data>
  <data name="EmptyRecord" xml:space="preserve">
    <value>No records to display</value>
  </data>
  <data name="EndsWith" xml:space="preserve">
    <value>Ends With</value>
  </data>
  <data name="EnterValue" xml:space="preserve">
    <value>Enter the value</value>
  </data>
  <data name="Equal" xml:space="preserve">
    <value>Equal</value>
  </data>
  <data name="Excelexport" xml:space="preserve">
    <value>Excel Export</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>false</value>
  </data>
  <data name="FilterbarTitle" xml:space="preserve">
    <value>\s filter bar cell</value>
  </data>
  <data name="FilterButton" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="FilterFalse" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="FilterMenu" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="FilterTrue" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="FirstPage" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>Greater Than</value>
  </data>
  <data name="GreaterThanOrEqual" xml:space="preserve">
    <value>Greater Than Or Equal</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group by this column</value>
  </data>
  <data name="GroupDisable" xml:space="preserve">
    <value>Grouping is disabled for this column</value>
  </data>
  <data name="GroupDropArea" xml:space="preserve">
    <value>Drag a column header here to group its column</value>
  </data>
  <data name="InvalidFilterMessage" xml:space="preserve">
    <value>Invalid Filter Data</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>item</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>items</value>
  </data>
  <data name="LastPage" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>Less Than</value>
  </data>
  <data name="LessThanOrEqual" xml:space="preserve">
    <value>Less Than Or Equal</value>
  </data>
  <data name="MatchCase" xml:space="preserve">
    <value>Match Case</value>
  </data>
  <data name="Matchs" xml:space="preserve">
    <value>Snap ik niks van</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>Next Page</value>
  </data>
  <data name="NoResult" xml:space="preserve">
    <value>No Matches Found</value>
  </data>
  <data name="NotEqual" xml:space="preserve">
    <value>Not Equal</value>
  </data>
  <data name="NumberFilter" xml:space="preserve">
    <value>Number Filters</value>
  </data>
  <data name="OKButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OR" xml:space="preserve">
    <value>OR</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="Pdfexport" xml:space="preserve">
    <value>PDF Export</value>
  </data>
  <data name="PreviousPage" xml:space="preserve">
    <value>Previous Page</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Relations" xml:space="preserve">
    <value>Relations</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SearchColumns" xml:space="preserve">
    <value>search columns</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="ShowRowsWhere" xml:space="preserve">
    <value>Show rows where:</value>
  </data>
  <data name="SortAscending" xml:space="preserve">
    <value>Sort Ascending</value>
  </data>
  <data name="SortDescending" xml:space="preserve">
    <value>Sort Descending</value>
  </data>
  <data name="StartsWith" xml:space="preserve">
    <value>Starts With</value>
  </data>
  <data name="TextFilter" xml:space="preserve">
    <value>Text Filters</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="Turnover" xml:space="preserve">
    <value>Turnover</value>
  </data>
  <data name="UnGroup" xml:space="preserve">
    <value>Click here to ungroup</value>
  </data>
  <data name="Ungroup1" xml:space="preserve">
    <value>Ungroup by this column</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Wordexport" xml:space="preserve">
    <value>Word Export</value>
  </data>
  <data name="CurrentPageInfo" xml:space="preserve">
    <value>{0} of {1} pages</value>
  </data>
  <data name="FirstPageTooltip" xml:space="preserve">
    <value>Go to the first page</value>
  </data>
  <data name="LastPageTooltip" xml:space="preserve">
    <value>Go to the last page</value>
  </data>
  <data name="NextPagerTooltip" xml:space="preserve">
    <value>Go to the next page</value>
  </data>
  <data name="NextPageTooltip" xml:space="preserve">
    <value>Go to the next page</value>
  </data>
  <data name="PreviousPagerTooltip" xml:space="preserve">
    <value>Go to the previous page</value>
  </data>
  <data name="PreviousPageTooltip" xml:space="preserve">
    <value>Go to the previous page</value>
  </data>
  <data name="TotalItemsInfo" xml:space="preserve">
    <value>({0} items)</value>
  </data>
  <data name="TwoFactorAuthentication" xml:space="preserve">
    <value>Two-Factor Authentication</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
    <comment>Grid</comment>
  </data>
  <data name="PagerDropDown" xml:space="preserve">
    <value>Items per page</value>
    <comment>Grid</comment>
  </data>
  <data name="SelectACountry" xml:space="preserve">
    <value>Select a Country</value>
  </data>
  <data name="Characters" xml:space="preserve">
    <value>Characters</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Notification" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Sender" xml:space="preserve">
    <value>Sender</value>
  </data>
  <data name="TextMessage" xml:space="preserve">
    <value>Text Message</value>
  </data>
  <data name="EmailTestMessage" xml:space="preserve">
    <value>&lt;p&gt;The rich text editor is WYSIWYG ("what you see is what you get") editor useful to create and edit content, and return the valid &lt;a href='https://ej2.syncfusion.com/home/' target='_blank'&gt;HTML markup&lt;/a&gt; or &lt;a href='https://ej2.syncfusion.com/home/' target='_blank'&gt;markdown&lt;/a&gt; of the content&lt;/p&gt;

                &lt;p&gt;&lt;b&gt;Toolbar&lt;/b&gt;&lt;/p&gt;
                &lt;ol&gt;
                    &lt;li&gt; 
                        &lt;p&gt; Toolbar contains commands to align the text, insert link, insert image, insert list, undo/redo operations, HTML view, etc &lt;/p&gt;
                    &lt;/li&gt;
                    &lt;li&gt; 
                        &lt;p&gt; Toolbar is fully customizable &lt;/p&gt;
                    &lt;/li&gt;
                &lt;/ol&gt;
                    
                &lt;p&gt;&lt;b&gt;Links&lt;/b&gt;&lt;/p&gt;
                &lt;ol&gt;
                    &lt;li&gt;
                        &lt;p&gt;You can insert a hyperlink with its corresponding dialog &lt;/p&gt;
                    &lt;/li&gt;
                    &lt;li&gt;
                        &lt;p&gt;Attach a hyperlink to the displayed text. &lt;/p&gt;
                    &lt;/li&gt;
                    &lt;li&gt;
                        &lt;p&gt; Customize the quick toolbar based on the hyperlink &lt;/p&gt; 
                    &lt;/li&gt;
                &lt;/ol&gt;
                    
                &lt;p&gt;&lt;b&gt;Image.&lt;/b&gt;&lt;/p&gt;
                &lt;ol&gt;
                    &lt;li&gt;
                        &lt;p&gt; Allows you to insert images from an online source as well as the local computer &lt;/p&gt; 
                    &lt;/li&gt;
                    &lt;li&gt;
                        &lt;p&gt; You can upload an image &lt;/p&gt;
                    &lt;/li&gt;
                    &lt;li&gt; 
                        &lt;p&gt;Provides an option to customize quick toolbar for an image &lt;/p&gt; 
                    &lt;/li&gt;
                &lt;/ol&gt;
                &lt;img alt="Logo" src="./src/rte/images/RTEImage-Feather.png" style="width: 300px;"/&gt;</value>
  </data>
  <data name="PleaseProvideAMobileNumber" xml:space="preserve">
    <value>Please provide a mobile number</value>
  </data>
  <data name="PleaseProvideASenderName" xml:space="preserve">
    <value>Please provide a sender name</value>
  </data>
  <data name="TextMessageTestMessage" xml:space="preserve">
    <value>This is a small test message send with the Fullstack Framework</value>
  </data>
  <data name="TextMessageTestSender" xml:space="preserve">
    <value>Fullstack</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>Geschiedenis</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="SelectCountry" xml:space="preserve">
    <value>Select country</value>
  </data>
</root>